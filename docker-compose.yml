#version: '3'
services:
 # Servicio para la base de datos MySQL
  db:
    image: mysql:5.7
    container_name: mysql-db
    # env_file:
    #   - ./backend/.env
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: expedientesBP
      TZ: "America/Guatemala" # Zona horaria
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network

  # Servicio para el backend (Node.js)
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./basededatos:/basededatos # Montar la carpeta donde est√° el script.sql
      - "E:/Expedientes:/app/Expedientes" # ruta de los expedientes
    networks:
      - app-network
    # env_file:
    #   - ./backend/.env
    environment:
       #- NODE_ENV=${NODE_ENV}
       - PORT=3000
       - DB_HOST=db
       - DB_PASSWORD=123456
       - DB_NAME=expedientesBP
       - DB_PORT=3306
       - TZ="America/Guatemala"
    depends_on:
      - db
    command: sh -c "while ! nc -z db 3306 ; do sleep 1 ; done && npm run dev"

# Servicio para interactuar con el host y ejecutar NAPS2
  naps2-service:
    image: node:14 # Usa una imagen de Node.js para ejecutar el servicio
    container_name: naps2-service
    volumes:
      - "C:/Program Files/NAPS2:/app/NAPS2" # Ruta de NAPS2 en el host
    ports:
      - "4000:4000" # Puerto para acceder al servicio de NAPS2
    networks:
      - app-network
    command: node /app/backend/naps2-service.js # Comando para ejecutar el servicio

#   # Servicio para el frontend (React)
#   frontend:
#     build: 
#       context: ./frontend
#       dockerfile: Dockerfile
#     container_name: frontend
#     ports:
#       - "5173:5173"
#     volumes:
#       - ./frontend:/app
#     networks:
#       - app-network
#     environment:
#       - REACT_APP_BACKEND_URL=http://backend:5000
#     depends_on:
#       - backend

networks:
  app-network:
    driver: bridge

volumes:
  db_data:



